# IPython Notebook code
import cv2
import matplotlib.pyplot as plt
import sys
#%matplotlib inline
#
cctv_image = cv2.imread('/Users/ankitgupta/Documents/WebstormProjects/CMPE295B/public/images/' + sys.argv[1] + '.jpg')
#cctv_image = cv2.imread('imagecheck.jpg')
#print 'Number of arguments:', len(sys.argv), 'arguments.'
print (str(sys.argv[1]))
print (cctv_image.size)
# the 'cascade.xml' file is the file generated by the training script above
vehicle_classifier = cv2.CascadeClassifier('/Users/ankitgupta/Documents/WebstormProjects/CMPE295B/CMPE295B/Janish/classifier/cascade.xml')

# various parameters can be passed to modify how objects are detected
vehicles = vehicle_classifier.detectMultiScale(cctv_image, 1.1, 2, maxSize=(100,100))

#print 'Vehicles detected: %d' % (len(vehicles))

# draw a rectangle around every vehicle detected
for (x,y,w,h) in vehicles:
#    cv2.rectangle(cctv_image, (x,y), (x+w, y+h),(255,0,0),2)
	cv2.line(cctv_image,(x,y),(x+1,y+1),(0,0,255),10)
plt.figure(figsize=(9,9))
plt.axis('off')
cv2.imwrite( "/Users/ankitgupta/Documents/WebstormProjects/CMPE295B/public/images/detected_" + sys.argv[1] + '.jpg',cctv_image);
#cv2.imwrite("/Users/ankitgupta/Desktop/ankit.jpg",cctv_image)
#plt.imshow(cv2.cvtColor(cctv_image, cv2.COLOR_BGR2RGB))
#cv2.imshow('cctv_image', cctv_image)
#cv2.waitKey(0)
#cv2.destroyAllWindows()
